package net.xytra.wobmail.components;

// Generated by the WOLips Templateengine Plug-in at Apr 18, 2007 9:01:26 PM

import java.util.HashMap;
import java.util.Locale;
import java.util.Map;

import javax.mail.AuthenticationFailedException;
import javax.mail.MessagingException;

import net.xytra.wobmail.application.Session;
import net.xytra.wobmail.manager.MailSessionException;
import net.xytra.wobmail.manager.Pop3MailSessionManager;

import com.webobjects.appserver.WOComponent;
import com.webobjects.appserver.WOContext;
import com.webobjects.foundation.NSArray;

import er.extensions.ERXLocalizer;
import er.extensions.ERXLogger;
import er.extensions.ERXNonSynchronizingComponent;
import er.extensions.ERXProperties;

public class Main extends ERXNonSynchronizingComponent
{
	public static final String INVALID_USER_PASS_ERROR_KEY = "Main.InvalidUsernameOrPassword";

	public String selectedLanguage = "en_CA";

	public String username;
	public String password;

	public String errorMessage;

	public String currentLanguage;

	private NSArray availableLanguages; 
	private Map<String, String> languageNameMap = new HashMap<String, String>();
	private ERXLocalizer localizer;

	public Main(WOContext context) {
		super(context);
	}

	public WOComponent loginAction()
	{
		errorMessage = null;
		Pop3MailSessionManager manager = Pop3MailSessionManager.instance();

		try {
			manager.registerMailSession((Session)session(), username, password);
		}
		catch (AuthenticationFailedException e) {
			// Failed authentication suggests we might want to null out password first:
			password = null;

			// Display error message:
			errorMessage = getLocalizer().localizedStringForKeyWithDefault(INVALID_USER_PASS_ERROR_KEY);
			ERXLogger.log.debug(e);
		} catch (MessagingException me) {
			throw (new MailSessionException(me));
		}

		if (errorMessage != null) {
			return (context().page());
		}

		((Session)session()).setUsername(username);
		((Session)session()).setLanguage(selectedLanguage);

		return (pageWithName(XWMList.class.getName()));
	}

	/**
	 * Update the language before returning the same page.
	 *
	 * @return same page.
	 */
	public WOComponent updateAction() {
		localizer = ERXLocalizer.localizerForLanguage(selectedLanguage);

		return (context().page());
	}

	// Data
	public NSArray<String> getAvailableLanguages() {
		if (availableLanguages == null) {
			availableLanguages = ERXProperties.arrayForKeyWithDefault("er.extensions.ERXLocalizer.availableLanguages", new NSArray<String>("en_CA"));
		}

		return (availableLanguages);
	}

	public String getCurrentLanguageName() {
		if (languageNameMap.get(currentLanguage) == null) {
			String[] languageNameParts = currentLanguage.split("_");
			Locale locale;

			if (languageNameParts.length == 1) {
				locale = new Locale(languageNameParts[0]);
			} else if (languageNameParts.length == 2) {
				locale = new Locale(languageNameParts[0], languageNameParts[1]);
			} else if (languageNameParts.length == 3) {
				locale = new Locale(languageNameParts[0], languageNameParts[1], languageNameParts[2]);
			} else {
				throw (new IllegalArgumentException("Wrong number of parts in languageName: " + languageNameParts.length));
			}

			String rawLanguageName = locale.getDisplayLanguage(locale);

			// Capitalize first letter of language name:
			String firstLetter = rawLanguageName.substring(0,1);  // Get first letter
	        String remainder   = rawLanguageName.substring(1);    // Get remainder of word.
	        String presentableLanguageName = firstLetter.toUpperCase(locale) + remainder;

			languageNameMap.put(currentLanguage, presentableLanguageName);
		}

		return (languageNameMap.get(currentLanguage));
	}

	public String getLocalizedStringLogin() {
		return (getLocalizer().localizedStringForKeyWithDefault("Main.Login"));
	}

	public ERXLocalizer getLocalizer() {
		if (localizer == null) {
			localizer = ERXLocalizer.defaultLocalizer();
		}

		return (localizer);
	}

}
