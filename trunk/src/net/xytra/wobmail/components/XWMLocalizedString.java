package net.xytra.wobmail.components;
// Generated by the WOLips Templateengine Plug-in at Oct 31, 2009 5:04:11 PM

import com.webobjects.appserver.WOContext;
import com.webobjects.eocontrol.EOEnterpriseObject;
import com.webobjects.foundation.NSKeyValueCodingAdditions;

import er.extensions.ERXLocalizedString;
import er.extensions.ERXLocalizer;
import er.extensions.ERXSession;

public class XWMLocalizedString extends ERXLocalizedString {
	public XWMLocalizedString(WOContext context) {
		super(context);
	}

	@Override
	public ERXLocalizer localizer() {
		return ((ERXLocalizer)objectValueForBinding("localizer", ((ERXSession)session()).localizer()));
	}

	private String objectToString(Object value) {
		String string = null;

		if (value != null) {
			if (value instanceof String) {
				string = (String)value;
			} else if (value instanceof EOEnterpriseObject) {
				string = ((EOEnterpriseObject)value).userPresentableDescription();
			} else {
				string = value.toString();
			}
		}

		return string;
	}

	@Override
	public String value() {
		ERXLocalizer localizer = localizer();
		String stringToLocalize = null, localizedString = null;

		if (!hasBinding("templateString")) {
			if (hasBinding("object") || hasBinding("keyPath")) {
				Object value = object();
				if (hasBinding("keyPath")) {
					value = NSKeyValueCodingAdditions.Utility.valueForKeyPath(value, (String)valueForBinding("keyPath"));
				}
				stringToLocalize = objectToString(value);
			} else if (hasBinding("value")) {
				stringToLocalize = (String) valueForBinding("value");
				if (booleanValueForBinding("omitWhenEmpty") && localizer.localizedStringForKey(stringToLocalize) == null) {
					stringToLocalize = "";
				}
			}
			if (stringToLocalize == null && hasBinding("valueWhenEmpty")) {
				stringToLocalize = (String) valueForBinding("valueWhenEmpty");
			}
			if (stringToLocalize != null) {
				localizedString = localizer.localizedStringForKeyWithDefault(stringToLocalize);
			}
		} else {
			String templateString = (String) valueForBinding("templateString");
			Object otherObject = valueForBinding("otherObject");
			localizedString = localizer.localizedTemplateStringForKeyWithObjectOtherObject(templateString, object(), otherObject);
		}

		return (localizedString);
	}

}
