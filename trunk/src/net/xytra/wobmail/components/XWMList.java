package net.xytra.wobmail.components;
// Generated by the WOLips Templateengine Plug-in at Apr 21, 2007 6:01:35 PM

import javax.mail.Folder;
import javax.mail.MessagingException;

import net.xytra.wobmail.application.Application;
import net.xytra.wobmail.application.Session;
import net.xytra.wobmail.manager.Pop3SessionManager;
import net.xytra.wobmail.misc.MessageRow;

import com.webobjects.appserver.WOComponent;
import com.webobjects.appserver.WOContext;
import com.webobjects.foundation.NSArray;

public class XWMList extends XWMAbstractPage
{
	public int currentMessageIndex;
	public MessageRow currentMessageRow;

	private String currentSortField = null;
	private boolean currentSortReverse = false;

	public XWMList(WOContext context) {
		super(context);

		Session session = ((Session)context.session());
		this.currentSortField = session.getCurrentSortParam();
		this.currentSortReverse = session.getCurrentSortReverse();
	}

	public WOComponent deleteSelectedMessagesAction() throws MessagingException
	{
		((Session)session()).deleteSelectedMessages();

		return (context().page());
	}

	public WOComponent selectAllMessagesAction() throws MessagingException
	{
		((Session)session()).setSelectedAllMessagesForDeletion(true);

		return (context().page());
	}

	public WOComponent selectNoMessagesAction() throws MessagingException
	{
		((Session)session()).setSelectedAllMessagesForDeletion(false);

		return (context().page());
	}

	public WOComponent sortByDateSentAction()
	{
		return (sortByFieldAction(MessageRow.DATE_SENT_SORT_FIELD));
	}

	public WOComponent sortBySenderAction()
	{
		return (sortByFieldAction(MessageRow.SENDER_SORT_FIELD));
	}

	public WOComponent sortBySubjectAction()
	{
		return (sortByFieldAction(MessageRow.SUBJECT_SORT_FIELD));
	}

	protected WOComponent sortByFieldAction(String fieldName)
	{
		if (fieldName == this.currentSortField)
			this.currentSortReverse = !this.currentSortReverse;
		else
		{
			this.currentSortField = fieldName;
			this.currentSortReverse = false;
		}

		return (context().page());
	}

	public WOComponent viewMessageAction() throws MessagingException
	{
		XWMViewMessage page = (XWMViewMessage)pageWithName(XWMViewMessage.class.getName());
		Folder folder = Pop3SessionManager.instance().obtainOpenInboxFor(session().sessionID());
		page.setMessage(folder.getMessage(currentMessageRow.getMessageNumber()));

		return (page);
	}

	public NSArray availableMessages() throws MessagingException
	{
		return (((Session)session()).availableInboxMessageRows(false, currentSortField, currentSortReverse));
	}

	public String listRowClass() throws MessagingException
	{
		StringBuffer sb = new StringBuffer();

		if ((currentMessageIndex % 2) == 0)
			sb.append("XWMlistRowLight");
		else
			sb.append("XWMlistRowDark");

		return (sb.toString());
	}

	public String listScriptUrl() {
		return (Application.application().resourceManager().urlForResourceNamed("mailList.js", "app", null, context().request()));
	}

	public boolean currentMessageChecked()
	{
		return (((Session)session()).isMessageSelectedForDeletion(currentMessageIndex));
	}

	public void setCurrentMessageChecked(boolean value)
	{
		((Session)session()).setMessageSelectedForDeletion(currentMessageIndex, value);
	}

}
